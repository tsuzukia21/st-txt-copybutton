{"ast":null,"code":"import React from\"react\";import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class TextClipboardComponent extends StreamlitComponentBase{constructor(){super(...arguments);this.state={textData:null,error:null};this.handleButtonClick=async()=>{try{const textToCopy=String(this.props.args[\"text_to_copy\"]);await navigator.clipboard.writeText(textToCopy);this.setState({textData:textToCopy,error:null},()=>{Streamlit.setComponentValue(\"Copied: \"+textToCopy);});}catch(err){if(err instanceof DOMException&&err.name===\"NotAllowedError\"){console.log(\"Access to the clipboard was denied.\");}else if(err instanceof Error){this.setState({error:\"Failed to copy text. Details: \"+err.message});console.error(\"Failed to copy to clipboard: \",err.message);}else{this.setState({error:\"Failed to copy text.\"});console.error(\"Failed to copy to clipboard\");}}};this.render=()=>{const label=String(this.props.args[\"label\"]);const{error}=this.state;const theme=this.props.theme;const buttonStyle={backgroundColor:\"transparent\",color:theme.textColor,padding:\"5px 10px\",border:`1px solid ${theme.textColor}40`,borderRadius:\"8px\",cursor:\"pointer\",fontSize:\"14px\",outline:\"none\",transition:\"color 0.3s, border-color 0.3s\",display:\"inline-block\",height:\"40px\",lineHeight:\"27px\"};const buttonHoverStyle={color:theme.primaryColor,borderColor:theme.primaryColor};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:this.handleButtonClick,style:buttonStyle,onMouseEnter:e=>{Object.assign(e.currentTarget.style,buttonHoverStyle);},onMouseLeave:e=>{Object.assign(e.currentTarget.style,buttonStyle);},children:/*#__PURE__*/_jsx(\"label\",{children:label})}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:error})]});};}}export default withStreamlitConnection(TextClipboardComponent);","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","jsxs","_jsxs","TextClipboardComponent","constructor","arguments","state","textData","error","handleButtonClick","textToCopy","String","props","args","navigator","clipboard","writeText","setState","setComponentValue","err","DOMException","name","console","log","Error","message","render","label","theme","buttonStyle","backgroundColor","color","textColor","padding","border","borderRadius","cursor","fontSize","outline","transition","display","height","lineHeight","buttonHoverStyle","primaryColor","borderColor","children","onClick","style","onMouseEnter","e","Object","assign","currentTarget","onMouseLeave"],"sources":["/Users/suzuki/Desktop/st-txt-copybutton/st_txt_copybutton/frontend/src/MyComponent.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  Theme,\n} from \"streamlit-component-lib\";\n\ninterface State {\n  textData: string | null;\n  error: string | null;\n}\n\nclass TextClipboardComponent extends StreamlitComponentBase<State> {\n  public state: State = { textData: null, error: null };\n\n  private handleButtonClick = async (): Promise<void> => {\n    try {\n      const textToCopy = String(this.props.args[\"text_to_copy\"]);\n      await navigator.clipboard.writeText(textToCopy);\n      this.setState({ textData: textToCopy, error: null }, () => {\n        Streamlit.setComponentValue(\"Copied: \" + textToCopy);\n      });\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"NotAllowedError\") {\n        console.log(\"Access to the clipboard was denied.\");\n      } else if (err instanceof Error) {\n        this.setState({ error: \"Failed to copy text. Details: \" + err.message });\n        console.error(\"Failed to copy to clipboard: \", err.message);\n      } else {\n        this.setState({ error: \"Failed to copy text.\" });\n        console.error(\"Failed to copy to clipboard\");\n      }\n    }\n  };\n\n  public render = (): React.ReactNode => {\n    const label = String(this.props.args[\"label\"])\n    const { error } = this.state;\n    const theme: Theme | undefined = this.props.theme;\n\n    const buttonStyle = {\n      backgroundColor: \"transparent\",\n      color: theme.textColor,\n      padding: \"5px 10px\",\n      border: `1px solid ${theme.textColor}40`,\n      borderRadius: \"8px\",\n      cursor: \"pointer\",\n      fontSize: \"14px\",\n      outline: \"none\",\n      transition: \"color 0.3s, border-color 0.3s\",\n      display: \"inline-block\",\n      height: \"40px\",\n      lineHeight: \"27px\",\n    };\n\n    const buttonHoverStyle = {\n      color: theme.primaryColor,\n      borderColor: theme.primaryColor,\n    };\n\n    return (\n      <div>\n        <button\n          onClick={this.handleButtonClick}\n          style={buttonStyle}\n          onMouseEnter={e => {\n            Object.assign(e.currentTarget.style, buttonHoverStyle);\n          }}\n          onMouseLeave={e => {\n            Object.assign(e.currentTarget.style, buttonStyle);\n          }}\n        >\n          <label>{label}</label>\n        </button>\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(TextClipboardComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}