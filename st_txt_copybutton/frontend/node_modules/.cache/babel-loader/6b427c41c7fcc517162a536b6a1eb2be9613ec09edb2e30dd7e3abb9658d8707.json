{"ast":null,"code":"var _jsxFileName = \"/Users/suzuki/Desktop/st-txt-copybutton/st_txt_copybutton/frontend/src/MyComponent.tsx\";\nimport React from \"react\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TextClipboardComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textData: null,\n      error: null\n    };\n    this.handleButtonClick = async () => {\n      try {\n        const textToCopy = String(this.props.args[\"text_to_copy\"]);\n        await navigator.clipboard.writeText(textToCopy);\n        this.setState({\n          textData: textToCopy,\n          error: null\n        }, () => {\n          Streamlit.setComponentValue(\"Copied: \" + textToCopy);\n        });\n      } catch (err) {\n        if (err instanceof DOMException && err.name === \"NotAllowedError\") {\n          console.log(\"Access to the clipboard was denied.\");\n        } else if (err instanceof Error) {\n          this.setState({\n            error: \"Failed to copy text. Details: \" + err.message\n          });\n          console.error(\"Failed to copy to clipboard: \", err.message);\n        } else {\n          this.setState({\n            error: \"Failed to copy text.\"\n          });\n          console.error(\"Failed to copy to clipboard\");\n        }\n      }\n    };\n    this.render = () => {\n      const label = String(this.props.args[\"label\"]);\n      const {\n        error\n      } = this.state;\n      const theme = this.props.theme;\n      const buttonStyle = {\n        backgroundColor: \"transparent\",\n        color: theme.textColor,\n        padding: \"5px 10px\",\n        border: `1px solid ${theme.textColor}66`,\n        borderRadius: \"8px\",\n        cursor: \"pointer\",\n        fontSize: \"14px\",\n        outline: \"none\",\n        transition: \"color 0.3s, border-color 0.3s\",\n        display: \"inline-block\",\n        height: \"40px\",\n        lineHeight: \"27px\"\n      };\n      const buttonHoverStyle = {\n        color: theme.primaryColor,\n        borderColor: theme.primaryColor\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleButtonClick,\n          style: buttonStyle,\n          onMouseEnter: e => {\n            Object.assign(e.currentTarget.style, buttonHoverStyle);\n          },\n          onMouseLeave: e => {\n            Object.assign(e.currentTarget.style, buttonStyle);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(TextClipboardComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","TextClipboardComponent","constructor","args","state","textData","error","handleButtonClick","textToCopy","String","props","navigator","clipboard","writeText","setState","setComponentValue","err","DOMException","name","console","log","Error","message","render","label","theme","buttonStyle","backgroundColor","color","textColor","padding","border","borderRadius","cursor","fontSize","outline","transition","display","height","lineHeight","buttonHoverStyle","primaryColor","borderColor","children","onClick","style","onMouseEnter","e","Object","assign","currentTarget","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suzuki/Desktop/st-txt-copybutton/st_txt_copybutton/frontend/src/MyComponent.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  Theme,\n} from \"streamlit-component-lib\";\n\ninterface State {\n  textData: string | null;\n  error: string | null;\n}\n\nclass TextClipboardComponent extends StreamlitComponentBase<State> {\n  public state: State = { textData: null, error: null };\n\n  private handleButtonClick = async (): Promise<void> => {\n    try {\n      const textToCopy = String(this.props.args[\"text_to_copy\"]);\n      await navigator.clipboard.writeText(textToCopy);\n      this.setState({ textData: textToCopy, error: null }, () => {\n        Streamlit.setComponentValue(\"Copied: \" + textToCopy);\n      });\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"NotAllowedError\") {\n        console.log(\"Access to the clipboard was denied.\");\n      } else if (err instanceof Error) {\n        this.setState({ error: \"Failed to copy text. Details: \" + err.message });\n        console.error(\"Failed to copy to clipboard: \", err.message);\n      } else {\n        this.setState({ error: \"Failed to copy text.\" });\n        console.error(\"Failed to copy to clipboard\");\n      }\n    }\n  };\n\n  public render = (): React.ReactNode => {\n    const label = String(this.props.args[\"label\"])\n    const { error } = this.state;\n    const theme: Theme | undefined = this.props.theme;\n\n    const buttonStyle = {\n      backgroundColor: \"transparent\",\n      color: theme.textColor,\n      padding: \"5px 10px\",\n      border: `1px solid ${theme.textColor}66`,\n      borderRadius: \"8px\",\n      cursor: \"pointer\",\n      fontSize: \"14px\",\n      outline: \"none\",\n      transition: \"color 0.3s, border-color 0.3s\",\n      display: \"inline-block\",\n      height: \"40px\",\n      lineHeight: \"27px\",\n    };\n\n    const buttonHoverStyle = {\n      color: theme.primaryColor,\n      borderColor: theme.primaryColor,\n    };\n\n    return (\n      <div>\n        <button\n          onClick={this.handleButtonClick}\n          style={buttonStyle}\n          onMouseEnter={e => {\n            Object.assign(e.currentTarget.style, buttonHoverStyle);\n          }}\n          onMouseLeave={e => {\n            Object.assign(e.currentTarget.style, buttonStyle);\n          }}\n        >\n          <label>{label}</label>\n        </button>\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(TextClipboardComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}